{"version":3,"sources":["../../../../src/components/Overlays/Modal/Modal.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  forwardRef,\n  ForwardRefExoticComponent,\n  HTMLAttributes,\n  ReactNode,\n  RefAttributes,\n  useEffect,\n  useState,\n} from \"react\";\nimport styles from \"./Modal.module.css\";\n\nimport { classNames } from \"helpers/classNames\";\nimport { useAppRootContext } from \"hooks/useAppRootContext\";\n\nimport { Drawer } from \"vaul\";\n\nimport { VisuallyHidden } from \"components/Service/VisuallyHidden/VisuallyHidden\";\nimport { ModalClose } from \"./components/ModalClose/ModalClose\";\nimport { ModalHeader } from \"./components/ModalHeader/ModalHeader\";\nimport { ModalOverlay } from \"./components/ModalOverlay/ModalOverlay\";\n\nexport interface ModalProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, \"onAnimationEnd\"> {\n  /** Controls the displayed state of the modal, enabling external management. */\n  open?: boolean;\n  /** Callback fired upon state change, facilitating open/close state synchronization. */\n  onOpenChange?: (open: boolean) => void;\n  /** Custom header component to display at the top of the modal. */\n  header?: ReactNode;\n  /** Custom component for the modal's overlay backdrop. */\n  overlayComponent?: ReactNode;\n  /** Component or element used to trigger the modal's visibility. */\n  trigger?: ReactNode;\n  /** Enables nesting within another drawer component, allowing for hierarchical structures. */\n  nested?: boolean;\n  /** Threshold for swipe actions to trigger modal closure, expressed as a decimal between 0 and 1. */\n  closeThreshold?: number;\n  /** Debounce duration after scrolling within the modal before it can be closed through swipe actions. */\n  scrollLockTimeout?: number;\n  /** Governs interaction with background elements when the modal is open. */\n  modal?: boolean;\n  /** Prevents automatic scroll position restoration when the modal closes, preserving user context. */\n  preventScrollRestoration?: boolean;\n  /** Defines snap points for modal positioning, supporting percentages of screen height or pixel values. */\n  snapPoints?: (number | string)[];\n  /** Snap point index at which the overlay begins to fade, enhancing visual cues for modal depth. */\n  fadeFromIndex?: never;\n  /** Determines if the modal can be closed by user interactions */\n  dismissible?: boolean;\n  /** Prevents the modal from preventing scroll when opened */\n  disablePreventScroll?: boolean;\n}\n\ntype ModalWithComponents = ForwardRefExoticComponent<\n  ModalProps & RefAttributes<HTMLDivElement>\n> & {\n  Header: typeof ModalHeader;\n  Overlay: typeof Drawer.Overlay;\n  Close: typeof ModalClose;\n};\n\n/**\n * Modal component, providing a flexible dialog framework with customizable content and interaction models.\n * It leverages the Drawer component from 'vaul' for its base functionality, enhanced with additional properties\n * and behaviors specific to modal dialogues, such as overlay management and nested modals.\n */\nexport const Modal = forwardRef<HTMLDivElement, ModalProps>(\n  (\n    {\n      overlayComponent = <ModalOverlay />,\n      open,\n      onOpenChange,\n      header,\n      className,\n      children,\n      nested,\n      trigger,\n      closeThreshold,\n      scrollLockTimeout,\n      snapPoints,\n      fadeFromIndex,\n      modal,\n      preventScrollRestoration,\n      dismissible,\n      ...restProps\n    },\n    ref\n  ) => {\n    const container = useAppRootContext();\n    const [portal, setPortal] = useState(container.portalContainer?.current);\n\n    // This is internal optimization for AppRoot\n    // React sets ref to normal value only after the first render\n    // If we will have this logic inside the AppRoot component, then all tree will be re-rendered\n    useEffect(() => {\n      setPortal(container.portalContainer?.current);\n    }, [container.portalContainer]);\n\n    const Component = nested ? Drawer.NestedRoot : Drawer.Root;\n    return (\n      <Component\n        open={open}\n        onOpenChange={onOpenChange}\n        closeThreshold={closeThreshold}\n        scrollLockTimeout={scrollLockTimeout}\n        snapPoints={snapPoints}\n        fadeFromIndex={fadeFromIndex}\n        modal={modal}\n        preventScrollRestoration={preventScrollRestoration}\n        dismissible={dismissible}\n        disablePreventScroll\n      >\n        {trigger && <Drawer.Trigger asChild>{trigger}</Drawer.Trigger>}\n        <Drawer.Portal container={portal}>\n          {overlayComponent}\n          <Drawer.Content\n            ref={ref}\n            className={classNames(styles.wrapper, className)}\n            {...restProps}\n            aria-describedby=\"modal-content\"\n          >\n            <VisuallyHidden>\n              <Drawer.Title />\n            </VisuallyHidden>\n            {header}\n            <div className={styles.body}>{children}</div>\n          </Drawer.Content>\n        </Drawer.Portal>\n      </Component>\n    );\n  }\n) as ModalWithComponents;\n\nModal.Header = ModalHeader;\nModal.Overlay = ModalOverlay;\nModal.Close = ModalClose;\n"],"names":["forwardRef","useEffect","useState","classNames","useAppRootContext","Drawer","VisuallyHidden","ModalClose","ModalHeader","ModalOverlay","Modal","ref","overlayComponent","open","onOpenChange","header","className","children","nested","trigger","closeThreshold","scrollLockTimeout","snapPoints","fadeFromIndex","modal","preventScrollRestoration","dismissible","restProps","container","portal","setPortal","portalContainer","current","Component","NestedRoot","Root","disablePreventScroll","Trigger","asChild","Portal","Content","aria-describedby","Title","div","Header","Overlay","Close"],"mappings":"AAAA;;;;;AAEA,SACEA,UAAU,EAKVC,SAAS,EACTC,QAAQ,QACH,QAAQ;AAGf,SAASC,UAAU,QAAQ,8BAAqB;AAChD,SAASC,iBAAiB,QAAQ,mCAA0B;AAE5D,SAASC,MAAM,QAAQ,OAAO;AAE9B,SAASC,cAAc,QAAQ,8CAAmD;AAClF,SAASC,UAAU,QAAQ,qCAAqC;AAChE,SAASC,WAAW,QAAQ,uCAAuC;AACnE,SAASC,YAAY,QAAQ,yCAAyC;AA0CtE;;;;CAIC,GACD,OAAO,MAAMC,sBAAQV,WACnB,SAmBEW;QAlBA,EACEC,iCAAmB,KAACH,iBAAe,EACnCI,IAAI,EACJC,YAAY,EACZC,MAAM,EACNC,SAAS,EACTC,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,cAAc,EACdC,iBAAiB,EACjBC,UAAU,EACVC,aAAa,EACbC,KAAK,EACLC,wBAAwB,EACxBC,WAAW,EAEZ,WADIC;QAfHf;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;QAMmCE;IADrC,MAAMA,YAAYxB;IAClB,MAAM,CAACyB,QAAQC,UAAU,GAAG5B,UAAS0B,6BAAAA,UAAUG,eAAe,cAAzBH,iDAAAA,2BAA2BI,OAAO;IAEvE,4CAA4C;IAC5C,6DAA6D;IAC7D,6FAA6F;IAC7F/B,UAAU;YACE2B;QAAVE,WAAUF,6BAAAA,UAAUG,eAAe,cAAzBH,iDAAAA,2BAA2BI,OAAO;IAC9C,GAAG;QAACJ,UAAUG,eAAe;KAAC;IAE9B,MAAME,YAAYf,SAASb,OAAO6B,UAAU,GAAG7B,OAAO8B,IAAI;IAC1D,qBACE,MAACF;QACCpB,MAAMA;QACNC,cAAcA;QACdM,gBAAgBA;QAChBC,mBAAmBA;QACnBC,YAAYA;QACZC,eAAeA;QACfC,OAAOA;QACPC,0BAA0BA;QAC1BC,aAAaA;QACbU,oBAAoB;;YAEnBjB,yBAAW,KAACd,OAAOgC,OAAO;gBAACC,OAAO;0BAAEnB;;0BACrC,MAACd,OAAOkC,MAAM;gBAACX,WAAWC;;oBACvBjB;kCACD,MAACP,OAAOmC,OAAO;wBACb7B,KAAKA;wBACLK,WAAWb,oCAA2Ba;uBAClCW;wBACJc,oBAAiB;;0CAEjB,KAACnC;0CACC,cAAA,KAACD,OAAOqC,KAAK;;4BAEd3B;0CACD,KAAC4B;gCAAI3B,SAAS;0CAAgBC;;;;;;;;AAKxC,GACuB;AAEzBP,MAAMkC,MAAM,GAAGpC;AACfE,MAAMmC,OAAO,GAAGpC;AAChBC,MAAMoC,KAAK,GAAGvC"}